spring:
  profiles: default
  application:
    name: secure-discovery

server:
  port: 8761
  ssl:
    enabled: true
    client-auth: want
    key-store: classpath:certificate.jks
    key-store-password: password    
    key-alias: 1
    trust-store: classpath:truststore.jks
    trust-store-password: password
    
eureka:
  instance:
    hostname: localhost
    securePort: ${server.port}
    securePortEnabled: true  
    nonSecurePortEnabled: false 
    homePageUrl: https://${eureka.instance.hostname}:${server.port}/
    statusPageUrl: https://${eureka.instance.hostname}:${server.port}/admin/info
  client:
    registerWithEureka: false
    fetchRegistry: false
    
---
spring:
  profiles: peer-1
  application:
    name: eureka-server-clustered
server:
  port: 9001 
  ssl:
    enabled: true
    client-auth: want
    #key-store: classpath:certificate.jks
    key-store: classpath:eureka.jks
    key-store-password: password    
    #key-alias: 1
    key-alias: eureka-cert2
    #trust-store: classpath:truststore.jks
    trust-store: classpath:eureka.jks
    trust-store-password: password   
eureka:
  instance:
    #hostname: peer-1-server.com    
    hostname: dev.test
    nonSecurePortEnabled: false
    securePortEnabled: true    
  client:
    registerWithEureka: true
    fetchRegistry: true   
    securePortEnabled: true    
    serviceUrl:
      #defaultZone: https://peer-2-server.com:9002/eureka/,https://peer-3-server.com:9003/eureka/
      #defaultZone: https://dev.test:9002/eureka/,https://dev.test:9003/eureka/
      defaultZone: https://sss2.com:9002/eureka/,https://sss3.com:9003/eureka/
 
---
spring:
  profiles: peer-2
  application:
    name: eureka-server-clustered   
server:
  port: 9002
  ssl:
    enabled: true
    client-auth: want
    #key-store: classpath:certificate.jks
    key-store: classpath:eureka.jks
    key-store-password: password    
    #key-alias: 1
    key-alias: eureka-cert2
    #trust-store: classpath:truststore.jks
    trust-store: classpath:eureka.jks
    trust-store-password: password   
eureka:
  instance:
    #hostname: peer-2-server.com
    hostname: dev.test
    nonSecurePortEnabled: false
    securePortEnabled: true
  client:
    registerWithEureka: true
    fetchRegistry: true  
    securePortEnabled: true     
    serviceUrl:
      #defaultZone: https://peer-1-server.com:9001/eureka/,https://peer-3-server.com:9003/eureka/
      #defaultZone: https://dev.test:9001/eureka/,https://dev.test:9003/eureka/
      defaultZone: https://sss1.com:9001/eureka/,https://sss3.com:9003/eureka/
 
---
spring:
  profiles: peer-3
  application:
    name: eureka-server-clustered  
server:
  port: 9003
  ssl:
    enabled: true
    client-auth: want
    #key-store: classpath:certificate.jks
    key-store: classpath:eureka.jks
    key-store-password: password    
    #key-alias: 1
    key-alias: eureka-cert2
    #trust-store: classpath:truststore.jks
    trust-store: classpath:eureka.jks
    trust-store-password: password   
eureka:
  instance:
    #hostname: peer-3-server.com
    hostname: dev.test    
    nonSecurePortEnabled: false
    securePortEnabled: true
  client:
    registerWithEureka: true
    fetchRegistry: true   
    securePortEnabled: true
    serviceUrl:
      #defaultZone: https://peer-1-server.com:9001/eureka/,https://peer-2-server.com:9002/eureka/
      #defaultZone: https://dev.test:9001/eureka/,https://dev.test:9002/eureka/
      defaultZone: https://sss1.com:9001/eureka/,https://sss2.com:9002/eureka/